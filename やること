#まあだいたいできたからいいとする
#・デバッグ用に、__repr__メソッドの定義
・operationとoperation_coreのプロパティセット、ゲットの設定
・make_function_instanceの無限ループ対策
頑張れば今日ここまでできるかな…
・patternの作成（クラス化する？それとも、functionでやっちゃう? つまり、function a b a b と呼ぶfunction）
    たしかに、じゃあpatternはfunctionのsupersetだとして、あんまりfunctionと別のプロパティとかいらないもんな
    でも、考えてみたら今回のloopはAB 次は BAの順番でやる、とかになるから、だめか。シンプルにfunctionのみでは実現できんのでは。
    ていうかそう考えると、loopをchildにもつoperationが、ABならAをもつのとBを持つので2つOperationが必要。
    考えてみたらPatternてOperation_Listのlistになるわ…。こらfunctionとかとは全く別の構造体になるね。
    これちゃんと考えないとだめだな
・runtimeの作成
ここは今週の平日のうちにやれたら最高すぎる…
・main_routineの作成（ついにブラウザ操作ライブラリを使うタイミングが…！）
・yamlの受け取り
ここまでを来週の月曜中に終わらせたい…できなくても再来週の休日中には…！
・リファクタリング
・テストの作成
・READMEのさくせい
今月中までにやろう

指示書設計
    選択できるオブジェクトと
    クリック、セレクト等の操作に分ける
    　→オブジェクト指向を意識して作る？
    　→でもインターフェースを作って、実装をポリモルフィズムで変えて…とかが必要と思えない
        　スーパーセットとかいらんでしょと

    そう考えると簡単に書ける、かつイテレートが簡単というところが重要か
    awkは行志向だけど…ていうかイテレートってなにに対して？

    やりたいことは簡単に書ける、かつパターンを取るのが容易というところでは。
    じゃあ、パターンって何？
    パターンは、例えばこのチェックボックスにはチェックを入れるけど、こっち入れない、とか。
    あとは何らか同じ性質を持ったものを全てチェックするとか。
    そういう操作のときには、たとえばボタンAを押したらこの画面に進むから、これを選択して
    ボタンAを押したら、前の画面に戻って、ボタンBを押して、押したらまた前の画面に戻って…としたいはず。

    ということはこれをプログラミング言語で書くと
    for(index=0; index <= something.length; i++){
        click(some_buttons[i])
        click("もどる")
    }
    というふうにしたい。

    ということは、何に対してイテレートするかって言うと、ある同様の性質をもった集合に入れられる
    オブジェクトが、イテレートの集合となる。（それはまあ当たり前と言えば当たり前？）
    集合のラベルとしてつけられるのは、例えばある要素の下に在るもの、とか。（こっちが重要？）
    （このtableタグの下に在るもの、とか）
    あとはチェックボックスのオンオフ、やセレクトボックスのoptionsとか。
    あとクリックしたい対象の集合とか。
    ["前に戻る","次に進む"]
    イテレートの対象は操作の対象にする配列でいいと。

    しかし、じゃあイテレートの対象にするのは上記のような集合でいいとして（かつ、集合の記法も一旦無視）
    ここからここの範囲でイテレートするという判断が必要になる。
    つまり、イテレートには始点と終点が必要になる。
    この画面でパターンを取りたい、みたいなことがある。
    その時、多くの場合始点はこの画面に入る、終点はこの画面に出る、という操作であり、その中でイテレートしたい
    オブジェクトの集合を記載する必要が在る。(とはいえ、実際〜をクリックしてから〜をクリックするまで、の範囲でパターンを取る) 
    ということは、制御構文を導入しなければいけない。
    そもそもが、〜をクリックする、その次に…という順番が存在する時点で制御構文は在ると言える（んじゃないのか多分）。 
　通常の集合（無順序）ではない順序集合になっている。
    まあとにかく、ある時点からある時点の操作の間で、イテレートしたい集合を書いてもらって、
    その中でパターンを作成する。